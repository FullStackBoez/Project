<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>